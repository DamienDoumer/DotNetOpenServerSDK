<?xml version="1.0" encoding="utf-8" ?>
<examples>
  <item id="Java#HelloProtocol">
    <sampleCode language="Java">
      package com.us.openserver.protocols.hello;

      import com.us.openserver.*;
      import com.us.openserver.protocols.*;

      import java.io.IOException;

      public class HelloProtocol extends ProtocolBase
      {
          public static final int PROTOCOL_IDENTIFIER = 0x000A;
	
          private IHelloProtocolObserver callbackInterface;
          public void setHelloObserver(IHelloProtocolObserver callbackInterface) 
          {
              this.callbackInterface = callbackInterface;
          }    
          private String serverResponse;
    	
          public void onPacketReceived(BinaryReader br) throws IOException
          {
              synchronized (this)
              {
                  serverResponse = br.readString();
                  log(Level.Info, String.format("Server responded: %1$s", serverResponse));
            
                  notifyAll();
              }
        
              if (callbackInterface != null)
                  callbackInterface.onHelloComplete(serverResponse);
          }
    
          public String hello(String message) throws Exception
          {
              synchronized (this)
              {
                  helloAsync(message);            
                  wait(10000);            
              }
              return serverResponse;
          }
    
          public void helloAsync(String message) throws Exception
          {
              BinaryWriter bw = CreateCommandPacket(message);
              try
              {
                  session.send(bw.toByteArray());
              }
              finally { try { bw.close(); } catch (IOException ex) { } }
          }
    
          public String helloBackgroundThread(String message) throws Exception
          {
              synchronized (this)
              {
                  helloBackgroundThreadAsync(message);            
                  wait(10000);            
              }
              return serverResponse;
          }
    
          public void helloBackgroundThreadAsync(String message) throws Exception
          {
              BinaryWriter bw = CreateCommandPacket(message);
              try
              {
                  new PacketWriter(session, bw.toByteArray()).execute();
              }
              finally { try { bw.close(); } catch (IOException ex) { } }
          }
    
          private BinaryWriter CreateCommandPacket(String message) throws IOException
          {
              BinaryWriter bw = new BinaryWriter();
              bw.writeUInt16(PROTOCOL_IDENTIFIER);
              bw.writeString(message);                        
              log(Level.Info, String.format("Client says: %1$s", message));
              return bw;
          }
    
          protected void log(Level level, String message)
          {
              session.log(level, String.format("[Hello] %1$s", message));
          }
      }
    </sampleCode>    
  </item>

  <item id="Java#IHelloProtocolObserver">
    <sampleCode language="Java">
      package com.us.openserver.protocols.hello;

      public interface IHelloProtocolObserver 
      {
          public void onHelloComplete(String serverResponse);
      }
    </sampleCode>
  </item>
</examples>

