<?xml version="1.0" encoding="utf-8"?>
<topic id="ClientSideComponents.Windows" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        This topic shows you how to create a Windows console application that uses the Windows
        Authentication Protocol to authenticate, uses the Keep-Alive Protocol to keep
        the connection alive and uses the sample Hello Protocol to send and receive a
        message.
      </para>
      <para>
        The complete source code for this sample application can be found at:
        <externalLink>
          <linkText>https://github.com/UpperSetting/DotNetOpenServerSDK/tree/master/Samples/Windows/HelloClient</linkText>
          <linkUri>https://github.com/UpperSetting/DotNetOpenServerSDK/tree/master/Samples/Windows/HelloClient</linkUri>
          <linkTarget>_blank</linkTarget>
        </externalLink>
      </para>
      <autoOutline>0</autoOutline>
    </introduction>

    <section address="Application">
      <title>Create a .Net Console Application using Visual Studio 2013</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Select <legacyBold>File > New > Project</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>New Project</legacyBold> form, select <legacyBold>Console Application</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Specify a <legacyBold>Name</legacyBold> and <legacyBold>Location</legacyBold>, then click <legacyBold>OK</legacyBold>.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="References">
      <title>Use NuGet to Reference the DotNetOpenServer Assemblies</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Select <legacyBold>Tools > NuGet Package Manager > Package Manager Console</legacyBold>.
                  From the <legacyBold>Package Manager Console</legacyBold>,
                  set the <legacyBold>Package Source</legacyBold> to <legacyBold>nuget.org</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the command-line type:
                </para>
                <code>
                  PM> Install-Package UpperSetting.OpenServer.Windows.Client
                  PM> Install-Package UpperSetting.OpenServer.Protocols.Hello.Client
                  PM> Install-Package UpperSetting.OpenServer.Protocols.KeepAlive
                  PM> Install-Package UpperSetting.OpenServer.Protocols.WinAuth.Client
                  PM> Install-Package log4net
                </code>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="app.config">
      <title>Create an Instance of the Client using the app.config</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  From the <legacyBold>Solution Explorer</legacyBold>, expand your project, right
                  click <legacyBold>app.config</legacyBold> then select
                  <legacyBold>Open</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Add the required configuration sections. For more information and a detailed
                  example which you can copy see: <link
                  xlink:href="ConfiguringWindowsComponents.app.config" />.
                </para>
              </content>
            </step>            
            <step>
              <content>
                <para>
                  From the <legacyBold>Solution Explorer</legacyBold>, expand your project, right
                  click <legacyBold>Program.cs</legacyBold> then select
                  <legacyBold>Open</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Add the following using statements:
                </para>
                <codeReference>WindowsClient#AppConfigUsing</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Create an instance of
                  <codeEntityReference>T:US.OpenServer.Client</codeEntityReference>. The
                  parameterless constructor reads the app.config file and applies the
                  configuration properties.
                </para>
                <codeReference>WindowsClient#AppConfigCreateClient</codeReference>
              </content>
            </step>            
          </steps>
        </procedure>
      </content>
    </section>

    <section address="Programatically">
      <title>Create an Instance of the Client Programatically</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  From the <legacyBold>Solution Explorer</legacyBold>, expand your project, right
                  click <legacyBold>Program.cs</legacyBold> then select
                  <legacyBold>Open</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Add the following using statements:
                </para>
                <codeReference>WindowsClient#Using</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the Main function, create a
                  <codeEntityReference>T:US.OpenServer.Configuration.ServerConfiguration</codeEntityReference>
                  object then set any properties you want to override including SSL/TLS
                  properties.
                </para>
                <codeReference>WindowsClient#ServerConfiguration</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Create a Dictionary of
                  <codeEntityReference>T:US.OpenServer.Protocols.ProtocolConfiguration</codeEntityReference>
                  objects keyed by the unique protocol identifier that contains the following
                  three protocols:
                </para>
                <list class="bullet">
                  <listItem>
                    <para>
                      <codeEntityReference>T:US.OpenServer.Protocols.WinAuth.WinAuthProtocolClient</codeEntityReference>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeEntityReference>T:US.OpenServer.Protocols.KeepAlive.KeepAliveProtocol</codeEntityReference>
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      <codeEntityReference>T:US.OpenServer.Protocols.Hello.HelloProtocolClient</codeEntityReference>
                    </para>
                  </listItem>
                </list>
                <codeReference>Portable#Dictionary</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Create the
                  <codeEntityReference>T:US.OpenServer.Client</codeEntityReference> passing in the
                  <codeEntityReference>T:US.OpenServer.Configuration.ServerConfiguration</codeEntityReference>
                  and the Dictionary of
                  <codeEntityReference>T:US.OpenServer.Protocols.ProtocolConfiguration</codeEntityReference> objects.
                </para>
                <codeReference>Portable#CreateClient</codeReference>
                <alert>
                  <para>
                    Each of the <codeEntityReference>T:US.OpenServer.Client</codeEntityReference>
                    constructor parameters can be set to null. If a parameter is set to null, the
                    constructor will create an instance of the configuration object using the
                    default property values then attempt to load the properties from the app.config
                    file.
                  </para>
                </alert>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="Connect">
      <title>Connect to the Server</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Call
                  <codeEntityReference>T:US.OpenServer.Client</codeEntityReference>.<codeEntityReference>M:US.OpenServer.Client.Connect</codeEntityReference>
                  to connect to server.
                </para>
                <codeReference>Portable#Connect</codeReference>
                <para>
                  Initialize the
                  <codeEntityReference>T:US.OpenServer.Protocols.WinAuth.WinAuthProtocolClient</codeEntityReference>
                  protocol then call
                  <codeEntityReference>M:US.OpenServer.Protocols.WinAuth.WinAuthProtocolClient.Authenticate(System.String,System.String,System.String)</codeEntityReference>
                  to authenticate the connection.
                </para>
                <codeReference>WindowsClient#Authenticate</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Initialize the
                  <codeEntityReference>T:US.OpenServer.Protocols.KeepAlive.KeepAliveProtocol</codeEntityReference>
                  to enable the client/server Keep-Alive (aka Heartbeat) protocol.
                </para>
                <codeReference>Portable#KeepAlive</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Initialize the
                  <codeEntityReference>T:US.OpenServer.Protocols.Hello.HelloProtocolClient</codeEntityReference>
                  then call 
                  <codeEntityReference>M:US.OpenServer.Protocols.Hello.HelloProtocolClient.Hello(System.String)</codeEntityReference>.
                </para>
                <codeReference>WindowsClient#Hello</codeReference>                
              </content>
            </step>            
          </steps>
        </procedure>
      </content>
    </section>
    
    <relatedTopics>
      <link xlink:href="ConfiguringWindowsComponents.app.config">app.config Reference Document</link>
      <link xlink:href="ClientSideComponents"/>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
