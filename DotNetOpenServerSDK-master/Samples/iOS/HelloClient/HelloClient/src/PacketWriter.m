//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/protocols/PacketWriter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PacketWriter.h"
#include "Session.h"
#include "java/lang/Exception.h"
#include "java/lang/Thread.h"

@interface ComUsOpenserverProtocolsPacketWriter () {
 @public
  ComUsOpenserverSessionSession *session_;
  IOSByteArray *packet_;
  JavaLangException *exception_;
  JavaLangThread *t_;
}

@end

J2OBJC_FIELD_SETTER(ComUsOpenserverProtocolsPacketWriter, session_, ComUsOpenserverSessionSession *)
J2OBJC_FIELD_SETTER(ComUsOpenserverProtocolsPacketWriter, packet_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComUsOpenserverProtocolsPacketWriter, exception_, JavaLangException *)
J2OBJC_FIELD_SETTER(ComUsOpenserverProtocolsPacketWriter, t_, JavaLangThread *)

inline jint ComUsOpenserverProtocolsPacketWriter_get_id();
inline jint ComUsOpenserverProtocolsPacketWriter_set_id(jint value);
inline jint *ComUsOpenserverProtocolsPacketWriter_getRef_id();
static jint ComUsOpenserverProtocolsPacketWriter_id;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComUsOpenserverProtocolsPacketWriter, id, jint)

@implementation ComUsOpenserverProtocolsPacketWriter

- (instancetype)initWithComUsOpenserverSessionSession:(ComUsOpenserverSessionSession *)session
                                        withByteArray:(IOSByteArray *)packet {
  ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(self, session, packet);
  return self;
}

- (void)execute {
  t_ = new_JavaLangThread_initWithJavaLangRunnable_withNSString_(self, JreStrcat("$I", @"PacketWriter", ComUsOpenserverProtocolsPacketWriter_id++));
  [t_ start];
}

- (void)run {
  @try {
    [((ComUsOpenserverSessionSession *) nil_chk(session_)) sendWithByteArray:packet_];
  }
  @catch (JavaLangException *ex) {
    exception_ = ex;
  }
}

- (JavaLangException *)getException {
  return exception_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComUsOpenserverSessionSession:withByteArray:", "PacketWriter", NULL, 0x1, NULL, NULL },
    { "execute", NULL, "V", 0x1, NULL, NULL },
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "getException", NULL, "Ljava.lang.Exception;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "session_", NULL, 0x2, "Lcom.us.openserver.session.Session;", NULL, NULL, .constantValue.asLong = 0 },
    { "packet_", NULL, 0x2, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "exception_", NULL, 0x2, "Ljava.lang.Exception;", NULL, NULL, .constantValue.asLong = 0 },
    { "t_", NULL, 0x2, "Ljava.lang.Thread;", NULL, NULL, .constantValue.asLong = 0 },
    { "id", "id", 0xa, "I", &ComUsOpenserverProtocolsPacketWriter_id, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComUsOpenserverProtocolsPacketWriter = { 2, "PacketWriter", "com.us.openserver.protocols", NULL, 0x1, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComUsOpenserverProtocolsPacketWriter;
}

@end

void ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(ComUsOpenserverProtocolsPacketWriter *self, ComUsOpenserverSessionSession *session, IOSByteArray *packet) {
  NSObject_init(self);
  self->session_ = session;
  self->packet_ = packet;
}

ComUsOpenserverProtocolsPacketWriter *new_ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(ComUsOpenserverSessionSession *session, IOSByteArray *packet) {
  ComUsOpenserverProtocolsPacketWriter *self = [ComUsOpenserverProtocolsPacketWriter alloc];
  ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(self, session, packet);
  return self;
}

ComUsOpenserverProtocolsPacketWriter *create_ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(ComUsOpenserverSessionSession *session, IOSByteArray *packet) {
  return new_ComUsOpenserverProtocolsPacketWriter_initWithComUsOpenserverSessionSession_withByteArray_(session, packet);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComUsOpenserverProtocolsPacketWriter)
