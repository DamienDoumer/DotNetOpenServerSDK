//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/Level.java
//

#include "J2ObjC_header.h"

#pragma push_macro("Level_INCLUDE_ALL")
#ifdef Level_RESTRICT
#define Level_INCLUDE_ALL 0
#else
#define Level_INCLUDE_ALL 1
#endif
#undef Level_RESTRICT

#if !defined (ComUsOpenserverLevel_) && (Level_INCLUDE_ALL || defined(ComUsOpenserverLevel_INCLUDE))
#define ComUsOpenserverLevel_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

typedef NS_ENUM(NSUInteger, ComUsOpenserverLevel_Enum) {
  ComUsOpenserverLevel_Enum_Debug = 0,
  ComUsOpenserverLevel_Enum_Info = 1,
  ComUsOpenserverLevel_Enum_Notice = 2,
  ComUsOpenserverLevel_Enum_Critical = 3,
  ComUsOpenserverLevel_Enum_Error = 4,
};

@interface ComUsOpenserverLevel : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (ComUsOpenserverLevel *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComUsOpenserverLevel)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComUsOpenserverLevel *ComUsOpenserverLevel_values_[];

inline ComUsOpenserverLevel *ComUsOpenserverLevel_get_Debug();
J2OBJC_ENUM_CONSTANT(ComUsOpenserverLevel, Debug)

inline ComUsOpenserverLevel *ComUsOpenserverLevel_get_Info();
J2OBJC_ENUM_CONSTANT(ComUsOpenserverLevel, Info)

inline ComUsOpenserverLevel *ComUsOpenserverLevel_get_Notice();
J2OBJC_ENUM_CONSTANT(ComUsOpenserverLevel, Notice)

inline ComUsOpenserverLevel *ComUsOpenserverLevel_get_Critical();
J2OBJC_ENUM_CONSTANT(ComUsOpenserverLevel, Critical)

inline ComUsOpenserverLevel *ComUsOpenserverLevel_get_Error();
J2OBJC_ENUM_CONSTANT(ComUsOpenserverLevel, Error)

FOUNDATION_EXPORT IOSObjectArray *ComUsOpenserverLevel_values();

FOUNDATION_EXPORT ComUsOpenserverLevel *ComUsOpenserverLevel_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComUsOpenserverLevel *ComUsOpenserverLevel_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComUsOpenserverLevel)

#endif

#pragma pop_macro("Level_INCLUDE_ALL")
