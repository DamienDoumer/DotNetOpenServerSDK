//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/Logger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("Logger_INCLUDE_ALL")
#ifdef Logger_RESTRICT
#define Logger_INCLUDE_ALL 0
#else
#define Logger_INCLUDE_ALL 1
#endif
#undef Logger_RESTRICT

#if !defined (ComUsOpenserverLogger_) && (Logger_INCLUDE_ALL || defined(ComUsOpenserverLogger_INCLUDE))
#define ComUsOpenserverLogger_

@class ComUsOpenserverLevel;
@class JavaLangException;
@protocol ComUsOpenserverILoggerObserver;

@interface ComUsOpenserverLogger : NSObject {
 @public
  jboolean logDebug_;
  jboolean logPackets_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComUsOpenserverILoggerObserver:(id<ComUsOpenserverILoggerObserver>)callback;

- (jboolean)getLogDebug;

- (jboolean)getLogPackets;

- (void)logWithJavaLangException:(JavaLangException *)ex;

- (void)logWithComUsOpenserverLevel:(ComUsOpenserverLevel *)level
                       withNSString:(NSString *)message;

- (void)setILoggerObserverWithComUsOpenserverILoggerObserver:(id<ComUsOpenserverILoggerObserver>)callback;

- (void)setLogDebugWithBoolean:(jboolean)logDebug;

- (void)setLogPacketsWithBoolean:(jboolean)logPackets;

@end

J2OBJC_EMPTY_STATIC_INIT(ComUsOpenserverLogger)

FOUNDATION_EXPORT void ComUsOpenserverLogger_init(ComUsOpenserverLogger *self);

FOUNDATION_EXPORT ComUsOpenserverLogger *new_ComUsOpenserverLogger_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComUsOpenserverLogger *create_ComUsOpenserverLogger_init();

FOUNDATION_EXPORT void ComUsOpenserverLogger_initWithComUsOpenserverILoggerObserver_(ComUsOpenserverLogger *self, id<ComUsOpenserverILoggerObserver> callback);

FOUNDATION_EXPORT ComUsOpenserverLogger *new_ComUsOpenserverLogger_initWithComUsOpenserverILoggerObserver_(id<ComUsOpenserverILoggerObserver> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComUsOpenserverLogger *create_ComUsOpenserverLogger_initWithComUsOpenserverILoggerObserver_(id<ComUsOpenserverILoggerObserver> callback);

J2OBJC_TYPE_LITERAL_HEADER(ComUsOpenserverLogger)

#endif

#pragma pop_macro("Logger_INCLUDE_ALL")
