//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/session/MyTrustManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("MyTrustManager_INCLUDE_ALL")
#ifdef MyTrustManager_RESTRICT
#define MyTrustManager_INCLUDE_ALL 0
#else
#define MyTrustManager_INCLUDE_ALL 1
#endif
#undef MyTrustManager_RESTRICT

#if !defined (ComUsOpenserverSessionMyTrustManager_) && (MyTrustManager_INCLUDE_ALL || defined(ComUsOpenserverSessionMyTrustManager_INCLUDE))
#define ComUsOpenserverSessionMyTrustManager_

#define JavaxNetSslX509TrustManager_RESTRICT 1
#define JavaxNetSslX509TrustManager_INCLUDE 1
#include "javax/net/ssl/X509TrustManager.h"

@class IOSObjectArray;
@class JavaSecurityKeyStore;

@interface ComUsOpenserverSessionMyTrustManager : NSObject < JavaxNetSslX509TrustManager >

#pragma mark Public

- (instancetype)initWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)keystore;

- (void)checkClientTrustedWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)certificates
                                                      withNSString:(NSString *)authType;

- (void)checkServerTrustedWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)certificates
                                                      withNSString:(NSString *)authType;

- (IOSObjectArray *)getAcceptedIssuers;

@end

J2OBJC_EMPTY_STATIC_INIT(ComUsOpenserverSessionMyTrustManager)

FOUNDATION_EXPORT void ComUsOpenserverSessionMyTrustManager_initWithJavaSecurityKeyStore_(ComUsOpenserverSessionMyTrustManager *self, JavaSecurityKeyStore *keystore);

FOUNDATION_EXPORT ComUsOpenserverSessionMyTrustManager *new_ComUsOpenserverSessionMyTrustManager_initWithJavaSecurityKeyStore_(JavaSecurityKeyStore *keystore) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComUsOpenserverSessionMyTrustManager *create_ComUsOpenserverSessionMyTrustManager_initWithJavaSecurityKeyStore_(JavaSecurityKeyStore *keystore);

J2OBJC_TYPE_LITERAL_HEADER(ComUsOpenserverSessionMyTrustManager)

#endif

#pragma pop_macro("MyTrustManager_INCLUDE_ALL")
