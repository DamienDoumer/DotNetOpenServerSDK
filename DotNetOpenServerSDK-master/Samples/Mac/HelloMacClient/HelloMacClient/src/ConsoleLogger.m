//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/ConsoleLogger.java
//

#include "ConsoleLogger.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Level.h"
#include "Logger.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@implementation ComUsOpenserverConsoleLogger

- (void)logWithComUsOpenserverLevel:(ComUsOpenserverLevel *)level
                       withNSString:(NSString *)message {
  [super logWithComUsOpenserverLevel:level withNSString:message];
  if (level == JreLoadEnum(ComUsOpenserverLevel, Debug) && !logDebug_) return;
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:NSString_formatWithNSString_withNSObjectArray_(@"%s %s", [IOSObjectArray newArrayWithObjects:(id[]){ level, message } count:2 type:NSObject_class_()])];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComUsOpenserverConsoleLogger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "logWithComUsOpenserverLevel:withNSString:", "log", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComUsOpenserverConsoleLogger = { 2, "ConsoleLogger", "com.us.openserver", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComUsOpenserverConsoleLogger;
}

@end

void ComUsOpenserverConsoleLogger_init(ComUsOpenserverConsoleLogger *self) {
  ComUsOpenserverLogger_init(self);
}

ComUsOpenserverConsoleLogger *new_ComUsOpenserverConsoleLogger_init() {
  ComUsOpenserverConsoleLogger *self = [ComUsOpenserverConsoleLogger alloc];
  ComUsOpenserverConsoleLogger_init(self);
  return self;
}

ComUsOpenserverConsoleLogger *create_ComUsOpenserverConsoleLogger_init() {
  return new_ComUsOpenserverConsoleLogger_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComUsOpenserverConsoleLogger)
