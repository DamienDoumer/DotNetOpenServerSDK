//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/session/PacketReadTypes.java
//

#include "J2ObjC_source.h"
#include "PacketReadTypes.h"

@implementation ComUsOpenserverSessionPacketReadTypes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComUsOpenserverSessionPacketReadTypes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "Header", "Header", 0x19, "B", NULL, NULL, .constantValue.asChar = ComUsOpenserverSessionPacketReadTypes_Header },
    { "HeaderComplete", "HeaderComplete", 0x19, "B", NULL, NULL, .constantValue.asChar = ComUsOpenserverSessionPacketReadTypes_HeaderComplete },
    { "Payload", "Payload", 0x19, "B", NULL, NULL, .constantValue.asChar = ComUsOpenserverSessionPacketReadTypes_Payload },
  };
  static const J2ObjcClassInfo _ComUsOpenserverSessionPacketReadTypes = { 2, "PacketReadTypes", "com.us.openserver.session", NULL, 0x1, 1, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComUsOpenserverSessionPacketReadTypes;
}

@end

void ComUsOpenserverSessionPacketReadTypes_init(ComUsOpenserverSessionPacketReadTypes *self) {
  NSObject_init(self);
}

ComUsOpenserverSessionPacketReadTypes *new_ComUsOpenserverSessionPacketReadTypes_init() {
  ComUsOpenserverSessionPacketReadTypes *self = [ComUsOpenserverSessionPacketReadTypes alloc];
  ComUsOpenserverSessionPacketReadTypes_init(self);
  return self;
}

ComUsOpenserverSessionPacketReadTypes *create_ComUsOpenserverSessionPacketReadTypes_init() {
  return new_ComUsOpenserverSessionPacketReadTypes_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComUsOpenserverSessionPacketReadTypes)
