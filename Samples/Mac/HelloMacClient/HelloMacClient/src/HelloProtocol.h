//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/protocols/hello/HelloProtocol.java
//

#include "J2ObjC_header.h"

#pragma push_macro("HelloProtocol_INCLUDE_ALL")
#ifdef HelloProtocol_RESTRICT
#define HelloProtocol_INCLUDE_ALL 0
#else
#define HelloProtocol_INCLUDE_ALL 1
#endif
#undef HelloProtocol_RESTRICT

#if !defined (ComUsOpenserverProtocolsHelloHelloProtocol_) && (HelloProtocol_INCLUDE_ALL || defined(ComUsOpenserverProtocolsHelloHelloProtocol_INCLUDE))
#define ComUsOpenserverProtocolsHelloHelloProtocol_

#define ProtocolBase_RESTRICT 1
#define ComUsOpenserverProtocolsProtocolBase_INCLUDE 1
#include "ProtocolBase.h"

@class ComUsOpenserverLevel;

@interface ComUsOpenserverProtocolsHelloHelloProtocol : ComUsOpenserverProtocolsProtocolBase

#pragma mark Protected

- (instancetype)init;

- (void)logWithComUsOpenserverLevel:(ComUsOpenserverLevel *)level
                       withNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(ComUsOpenserverProtocolsHelloHelloProtocol)

inline jint ComUsOpenserverProtocolsHelloHelloProtocol_get_PROTOCOL_IDENTIFIER();
#define ComUsOpenserverProtocolsHelloHelloProtocol_PROTOCOL_IDENTIFIER 10
J2OBJC_STATIC_FIELD_CONSTANT(ComUsOpenserverProtocolsHelloHelloProtocol, PROTOCOL_IDENTIFIER, jint)

FOUNDATION_EXPORT void ComUsOpenserverProtocolsHelloHelloProtocol_init(ComUsOpenserverProtocolsHelloHelloProtocol *self);

FOUNDATION_EXPORT ComUsOpenserverProtocolsHelloHelloProtocol *new_ComUsOpenserverProtocolsHelloHelloProtocol_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComUsOpenserverProtocolsHelloHelloProtocol *create_ComUsOpenserverProtocolsHelloHelloProtocol_init();

J2OBJC_TYPE_LITERAL_HEADER(ComUsOpenserverProtocolsHelloHelloProtocol)

#endif

#pragma pop_macro("HelloProtocol_INCLUDE_ALL")
